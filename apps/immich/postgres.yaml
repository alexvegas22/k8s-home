apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: cloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: ghcr.io/tensorchord/cloudnative-pgvecto.rs:16.5-v0.3.0@sha256:be3f025d79aa1b747817f478e07e71be43236e14d00d8a9eb3914146245035ba
          postgresql:
            shared_preload_libraries:
              - "vectors.so"

          managed:
            roles:
              - name: immich
                superuser: true
                login: true

          # bootstrap:
          #   initdb:
          #     database: immich
          #     owner: immich
          #     secret:
          #       name: postgres-secret
          #     postInitSQL:
          #       - CREATE EXTENSION IF NOT EXISTS "vectors";
          #       - CREATE EXTENSION IF NOT EXISTS "cube" CASCADE;
          #       - CREATE EXTENSION IF NOT EXISTS "earthdistance" CASCADE;

          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: cloud
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
  storageClassName: nfs-client
---
apiVersion: v1
kind: Service
metadata:
  name: db-postgresql
  namespace: cloud
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: postgresql
